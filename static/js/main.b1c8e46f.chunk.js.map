{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","tipe","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1c8e46f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Error = ({mensaje}) => {\r\n    return ( \r\n        <p className=\"alert alert-danger error\">{mensaje}</p>\r\n\r\n     );\r\n}\r\n \r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;"," import React, { Fragment, useState } from 'react';\r\n import Error from './Error';\r\n import PropTypes from 'prop-types'\r\n\r\n const Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n\r\n    // definir el state\r\n    const [ cantidad, guardarCantidad ] =  useState(0);\r\n    const [ error, guardarError ] = useState(false);\r\n    //Funcion que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad ( parseInt(e.target.value, 10) )\r\n    }\r\n\r\n    // Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        if ( cantidad < 1 || isNaN( cantidad ) ){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // si se pasa la validacion\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n        \r\n    }\r\n\r\n     return ( \r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n\r\n            { error ? <Error mensaje=\"El presupuesto es Incorrecto\" />  : null }\r\n\r\n        <form\r\n            onSubmit={agregarPresupuesto}\r\n        >\r\n            <input\r\n                type=\"numbre\"\r\n                className=\"u-full-width\"\r\n                placeholder=\"Coloca tu presupuesto\"  \r\n                onChange={definirPresupuesto}\r\n            />\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Definir Presupuesto\"\r\n            />\r\n\r\n        </form>\r\n\r\n        </Fragment>\r\n      );\r\n }\r\n\r\n Pregunta.propTypes = {\r\n    actualizarPregunta: PropTypes.func.isRequired,\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired\r\n}\r\n  \r\n export default Pregunta;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Formulario = ({guardarGasto,guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n\r\n    // cuyando el usuario agrega un gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //construir gasto\r\n\r\n        const gasto = {\r\n            nombre, \r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        //pasar el gasto al componente principal \r\n\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        // reset form\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos aqui</h2>\r\n\r\n            { error ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto incorrecto \" /> : null }\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    tipe=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    tipe=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad( parseInt(e.target.value, 10))}\r\n                />\r\n            </div>\r\n            <input\r\n            type=\"submit\"\r\n            className=\"button-primary u-full-width\"\r\n            value=\"Agregar Gasto\"\r\n            />\r\n        </form>\r\n\r\n\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Gasto = ({gasto}) => (  \r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n\r\n            <span className=\"gasto\"> $ {gasto.cantidad} </span>\r\n        </p>\r\n    </li>\r\n);\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Listado = ({gastos}) => (  \r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n\r\n        {gastos.map(gasto => (\r\n            <Gasto \r\n                key={gasto.id}\r\n                gasto={gasto}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\n \r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n\r\n    if ( ( presupuesto / 4 ) > restante ){\r\n        clase = 'alert alert-danger';\r\n    } else if ( (presupuesto / 2) > restante ) {\r\n        clase = 'alert alert-warning';\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n}","import React, {Fragment} from 'react';\r\nimport { revisarPresupuesto } from '../helpers';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ControlPresupuesto = ({presupuesto,restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={ revisarPresupuesto(presupuesto, restante) }>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n \r\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta'\nimport Formulario from './components/Formulario'\nimport Listado from './components/Listado'\nimport ControlPresupuesto from './components/ControlPresupuesto'\n\n\nfunction App() {\n\n  // definir el state\n  const [ presupuesto, guardarPresupuesto ] = useState(0);\n  const [ restante, guardarRestante ] = useState(0);\n  const [ mostrarPregunta, actualizarPregunta ] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [ gasto, guardarGasto] = useState([]);\n  const [ crearGasto, guardarCrearGasto] = useState(false);\n\n  // useeffect que actualiza el restante\n  \n  useEffect(() => {\n    if (crearGasto)\n    {\n      guardarGastos([\n        ...gastos, gasto\n      ]);\n\n      // resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante)\n\n\n      guardarCrearGasto(false);\n    }\n\n  }, [gasto, crearGasto, gastos, restante]);\n    \n\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenido\">\n          { mostrarPregunta ? \n            (\n              <Pregunta \n                guardarPresupuesto = {guardarPresupuesto}\n                guardarRestante = { guardarRestante }\n                actualizarPregunta = {actualizarPregunta}\n              />\n            ) : \n            (\n              <div className=\"row\">\n                <div className=\"one-half column\">\n                  <Formulario\n                    guardarGasto = {guardarGasto}\n                    guardarCrearGasto = {guardarCrearGasto}\n                  />\n                </div>\n                <div className=\"one-half column\">\n                  <Listado \n                    gastos={gastos}\n                  />\n                  <ControlPresupuesto \n                    presupuesto={presupuesto}\n                    restante={restante}\n                  \n                  />\n                </div>\n              </div>\n            ) \n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}